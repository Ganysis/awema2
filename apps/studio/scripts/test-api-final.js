/**
 * Test de l'API apr√®s d√©ploiement
 */

const fetch = require('node-fetch');

async function testAPIFinal() {
  const siteUrl = 'https://test-architecture-finale-1752315921377.netlify.app';
  
  console.log('üîç Test de l\'API Finale\n');
  console.log('Site:', siteUrl);
  console.log('');

  // Test 1: V√©rifier que les redirects fonctionnent
  console.log('1Ô∏è‚É£ Test des redirects Netlify...');
  try {
    const testResponse = await fetch(`${siteUrl}/api/cms/health`, {
      method: 'GET'
    });
    
    console.log('   Status:', testResponse.status);
    console.log('   URL finale:', testResponse.url);
    console.log('   Redirig√©:', testResponse.redirected);
  } catch (error) {
    console.log('   ‚ùå Erreur:', error.message);
  }

  // Test 2: Login
  console.log('\n2Ô∏è‚É£ Test de login...');
  try {
    const loginResponse = await fetch(`${siteUrl}/api/cms/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        email: 'admin@admin.fr',
        password: 'admin'
      })
    });

    console.log('   Status:', loginResponse.status);
    console.log('   Content-Type:', loginResponse.headers.get('content-type'));
    
    if (loginResponse.status === 200) {
      const loginData = await loginResponse.json();
      console.log('   ‚úÖ Login r√©ussi!');
      console.log('   Session token:', loginData.session?.token?.substring(0, 10) + '...');
    } else {
      const text = await loginResponse.text();
      console.log('   ‚ùå Erreur login');
      console.log('   R√©ponse:', text.substring(0, 100));
    }
  } catch (error) {
    console.log('   ‚ùå Exception:', error.message);
  }

  // Test 3: Content
  console.log('\n3Ô∏è‚É£ Test du contenu...');
  try {
    const contentResponse = await fetch(`${siteUrl}/api/cms/content`, {
      method: 'GET'
    });

    console.log('   Status:', contentResponse.status);
    
    if (contentResponse.status === 200) {
      const contentData = await contentResponse.json();
      console.log('   ‚úÖ Contenu r√©cup√©r√©');
      console.log('   Nombre de pages:', Array.isArray(contentData) ? contentData.length : 0);
    } else {
      const text = await contentResponse.text();
      console.log('   ‚ùå Erreur contenu');
      console.log('   R√©ponse:', text.substring(0, 100));
    }
  } catch (error) {
    console.log('   ‚ùå Exception:', error.message);
  }

  // Test 4: V√©rifier la page admin
  console.log('\n4Ô∏è‚É£ Test de la page admin...');
  try {
    const adminResponse = await fetch(`${siteUrl}/admin`);
    console.log('   Status:', adminResponse.status);
    console.log('   Content-Type:', adminResponse.headers.get('content-type'));
    
    if (adminResponse.status === 200) {
      const adminHtml = await adminResponse.text();
      const hasLoginForm = adminHtml.includes('login-form');
      const hasPageEditor = adminHtml.includes('page-editor');
      console.log('   ‚úÖ Page admin accessible');
      console.log('   Login form:', hasLoginForm ? '‚úÖ' : '‚ùå');
      console.log('   Page editor:', hasPageEditor ? '‚úÖ' : '‚ùå');
    }
  } catch (error) {
    console.log('   ‚ùå Exception:', error.message);
  }

  console.log('\nüìã R√©sum√©:');
  console.log('   Si les tests √©chouent, attendre 30-60 secondes');
  console.log('   que les Functions Netlify soient d√©ploy√©es');
}

testAPIFinal();