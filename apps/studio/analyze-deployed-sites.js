
const fs = require('fs').promises;
const path = require('path');

// REMPLACEZ CES URLS PAR LES VRAIES APR√àS D√âPLOIEMENT
const DEPLOYED_SITES = [
  { name: 'Plomberie Express Paris', url: 'https://YOUR-URL-1.netlify.app' },
  { name: '√âlec Pro Lyon', url: 'https://YOUR-URL-2.netlify.app' },
  { name: 'L\'Atelier du Bois', url: 'https://YOUR-URL-3.netlify.app' },
  { name: 'Couleurs M√©diterran√©e', url: 'https://YOUR-URL-4.netlify.app' },
  { name: 'B√¢ti Sud Construction', url: 'https://YOUR-URL-5.netlify.app' }
];

async function analyzeDeployedSites() {
  console.log('\nüîç ANALYSE DES SITES D√âPLOY√âS\n');
  
  for (const site of DEPLOYED_SITES) {
    console.log(`\nüìä Analyse de ${site.name}`);
    console.log(`üîó URL : ${site.url}`);
    
    if (site.url.includes('YOUR-URL')) {
      console.log('‚ùå URL non mise √† jour - d√©ployez d\'abord le site');
      continue;
    }
    
    try {
      const response = await fetch(site.url);
      const html = await response.text();
      
      console.log(`‚úÖ Site accessible (HTTP ${response.status})`);
      
      // Analyses
      const hasColors = (html.match(/background-color:/g) || []).length;
      const hasGradients = html.includes('linear-gradient');
      const hasPersonalized = html.includes(site.name);
      
      console.log(`   ‚Ä¢ Fonds color√©s : ${hasColors} trouv√©s`);
      console.log(`   ‚Ä¢ Gradients : ${hasGradients ? '‚úÖ' : '‚ùå'}`);
      console.log(`   ‚Ä¢ Contenu personnalis√© : ${hasPersonalized ? '‚úÖ' : '‚ùå'}`);
      
    } catch (error) {
      console.error(`‚ùå Erreur : ${error.message}`);
    }
  }
}

analyzeDeployedSites();
