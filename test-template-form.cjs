#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üß™ Test du template avec le formulaire basique\n');
console.log('='

.repeat(50));

// Configuration des m√©tiers disponibles
const METIERS = ['plombier', 'electricien', 'menuisier', 'macon', 'paysagiste'];

// Simuler les donn√©es du formulaire
const formData = {
  nomEntreprise: 'ElecPro Services',
  metier: 'electricien',
  ville: 'Lyon',
  telephone: '04 78 12 34 56',
  email: 'contact@elecpro-lyon.fr',
  siteWeb: 'elecpro-lyon.fr',
  description: 'Expert en √©lectricit√© depuis 15 ans',
  services: [
    'Installation √©lectrique',
    'D√©pannage urgence',
    'Mise aux normes',
    'Tableau √©lectrique',
    'Domotique',
    '√âclairage LED'
  ]
};

console.log('\nüìã Donn√©es du formulaire:');
console.log(JSON.stringify(formData, null, 2));

console.log('\nüîÑ G√©n√©ration du site pour:', formData.metier);
console.log('-'.repeat(50));

try {
  // Appeler le g√©n√©rateur de site
  const generateScript = path.join(__dirname, 'generate-site-metier-complet.cjs');

  if (!fs.existsSync(generateScript)) {
    throw new Error(`Script de g√©n√©ration non trouv√©: ${generateScript}`);
  }

  // Ex√©cuter la g√©n√©ration
  console.log('\n‚öôÔ∏è  Ex√©cution du script de g√©n√©ration...');
  execSync(`node ${generateScript} ${formData.metier}`, {
    stdio: 'inherit',
    cwd: __dirname
  });

  console.log('\n‚úÖ Site g√©n√©r√© avec succ√®s!');

  // V√©rifier les fichiers g√©n√©r√©s
  console.log('\nüìÅ V√©rification des fichiers g√©n√©r√©s:');
  const filesToCheck = [
    'src/content/homepage/-index.md',
    'src/content/about/-index.md',
    'src/content/services/-index.md',
    'src/content/projects/project-1.md',
    'src/content/faqs/-index.md',
    'src/content/reviews/-index.md',
    'src/content/sections/call-to-action.md'
  ];

  let allFilesOk = true;
  filesToCheck.forEach(file => {
    const filePath = path.join(__dirname, file);
    if (fs.existsSync(filePath)) {
      const content = fs.readFileSync(filePath, 'utf8');

      // V√©rifier la coh√©rence du contenu
      let isCoherent = true;

      // Pour √©lectricien
      if (formData.metier === 'electricien') {
        // Ne doit pas contenir de r√©f√©rences √† d'autres m√©tiers
        if (content.includes('plomberie') || content.includes('plombier') ||
            content.includes('menuiserie') || content.includes('ma√ßonnerie') ||
            content.includes('jardinage') || content.includes('paysagiste')) {
          isCoherent = false;
        }
        // Doit contenir des r√©f√©rences au m√©tier
        if (!content.toLowerCase().includes('√©lectric')) {
          isCoherent = false;
        }
      }

      if (isCoherent) {
        console.log(`  ‚úÖ ${file} - Coh√©rent avec le m√©tier`);
      } else {
        console.log(`  ‚ùå ${file} - Contenu incoh√©rent d√©tect√©`);
        allFilesOk = false;
      }
    } else {
      console.log(`  ‚ùå ${file} - Fichier manquant`);
      allFilesOk = false;
    }
  });

  // Test de lancement du serveur
  console.log('\nüöÄ Test de lancement du serveur de d√©veloppement...');
  console.log('Appuyez sur Ctrl+C apr√®s v√©rification visuelle\n');

  execSync('npm run dev', {
    stdio: 'inherit',
    cwd: __dirname
  });

} catch (error) {
  console.error('\n‚ùå Erreur lors du test:', error.message);
  process.exit(1);
}

console.log('\n' + '='.repeat(50));
console.log('‚ú® Test du template avec formulaire termin√©!');
console.log('\nR√©sum√©:');
console.log(`- M√©tier test√©: ${formData.metier}`);
console.log(`- Entreprise: ${formData.nomEntreprise}`);
console.log(`- Ville: ${formData.ville}`);
console.log('\nüí° Le template peut √™tre utilis√© avec n\'importe quel m√©tier');
console.log('   en passant simplement le nom du m√©tier au g√©n√©rateur.');